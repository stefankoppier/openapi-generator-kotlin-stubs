package {{apiPackage}}.internal

import com.squareup.moshi.*
import java.math.BigDecimal
import java.net.URI
import java.time.LocalDate

internal class BigDecimalAdapter : JsonAdapter<BigDecimal>() {
    override fun fromJson(reader: JsonReader): BigDecimal? {
        if (reader.peek() == JsonReader.Token.NULL) {
            return reader.nextNull()
        }
        return BigDecimal(reader.nextString())
    }

    override fun toJson(writer: JsonWriter, value: BigDecimal?) {
        if (value == null) {
            writer.nullValue()
        } else {
            writer.value(value.toString())
        }
    }
}

internal class URIAdapter : JsonAdapter<URI>() {
    override fun fromJson(reader: JsonReader): URI? {
        if (reader.peek() == JsonReader.Token.NULL) {
            return reader.nextNull()
        }
        return URI(reader.nextString())
    }

    override fun toJson(writer: JsonWriter, value: URI?) {
        if (value == null) {
            writer.nullValue()
        } else {
            writer.value(value.toString())
        }
    }
}

internal class LocalDateAdapter : JsonAdapter<LocalDate>() {
    override fun fromJson(reader: JsonReader): LocalDate? {
        if (reader.peek() == JsonReader.Token.NULL) {
            return reader.nextNull()
        }
        return LocalDate.parse(reader.nextString())
    }

    override fun toJson(writer: JsonWriter, value: LocalDate?) {
        if (value == null) {
            writer.nullValue()
        } else {
            writer.value(value.toString())
        }
    }
}