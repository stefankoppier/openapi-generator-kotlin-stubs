package {{apiPackage}}.internal

import com.github.tomakehurst.wiremock.client.MappingBuilder
import com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder
import com.github.tomakehurst.wiremock.client.WireMock
import com.github.tomakehurst.wiremock.client.WireMock.stubFor
import com.squareup.moshi.Moshi
import com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactory
import java.net.HttpURLConnection.*

abstract class AbstractStubBuilder(protected val stub: MappingBuilder) {
    protected val moshi: Moshi = Moshi.Builder()
        .addLast(KotlinJsonAdapterFactory())
        .build()

    /**
     * Inject the stub in WireMock using [code] as the http response code.
     *
     * @param code The http response code.
     */
    fun status(status: Int) {
        stubFor(stub.willReturn(WireMock.status(status)))
    }

    /**
     * Inject the [builder] in WireMock.
     *
     * @param builder The stub to inject.
     */
    fun response(builder: ResponseDefinitionBuilder) {
        stubFor(stub.willReturn(builder))
    }
}